Apache Camel là một nền tảng tích hợp (integration framework) giữa các thành phần trong hệ thống một cách hiệu quả, mạnh mẽ, hạng nhẹ (bộ thư viện của Camel chỉ khoảng 1.6Mb) và đặc biệt đơn giản để sử dụng.

Nhân (core) của Apache Camel là một bộ định tuyến (routing engine), chính xác hơn là một bộ công cụ hỗ trợ việc định tuyến các thông điệp (message). Nó có thể tạo ra các luật trong việc định tuyến (routing rules), hay các bộ lọc các message, và các bộ sử lý message trước khi được gửi đi. Bằng cách sử một loại ngôn ngữ tích hợp gọi là Camel DSL (Domain Specific Language), ta có thể có sử dụng Java DSL, Spring DSL hoặc Scala DSL.

Điểm đặc biệt của Camel là nó giúp nhà phát triển có thể tích hợp hầu hết hệ thống với nhau với các định dạng giữ liệu (data types) hay cá chuyển kết nối (protocols) khác nhau mà không cần phải chuyển đổi sang một định dạng kinh điển (như XML hay JSON) hay một chuẩn kết nối để nói chuyện với nhau. Camel hỗ trợ đến hơn 80 loại protocols và data types khác nhau. Chính vì vậy Camel rất thích hợp với những dự án đòi hỏi khả năng tích hợp phong phú, một số dự án nguồn mở như Apache ServiceMix hay Apache ActiveMQ đã sử dụng Camel như một tầng giao diện tích hợp phân tán.

Trước khi vào bài hướng dẫn cụ thể, tôi có một cảnh báo với các bạn rằng performance của Camel trong trường hợp dự án phải chịu tải lớn là khá chậm. Điều này đã được chính chúng tôi thực hiện đo đạc và phân tích trên dự án ESB của chúng tôi vừa mới thực hiện, sau khi bỏ Camel và thử viết lại bằng cách sử dụng gói Java Concurrent để chuyển tải message, kết quả thật đáng bất ngờ, tốc độ của dự án được cải thiện lên đến gần 4 lần. Do đó nếu bạn muốn áp dụng Camel và dự án của bạn thì hãy cẩn trọng.

Okie, bây giờ ta hãy thử sử dụng Apache Camel để routing message trong ActiveMQ xem sao!

Ý tưởng là bây giờ ta sẽ tạo ra một Project có tác dụng nghe một thông điệp từ một Queue dưới dạng JSON Message sau đó sẽ chuẩn hóa giữ liệu thành XML Message rồi gửi lại sang một Queue khác.